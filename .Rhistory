jkkskssksks
mem.limits()
ls()
install.packages("data.table")
library(data.table)
version()
version
?Quotes
# ===================================================================
#                      Exploratory Data Analysis
#                            Assignment #1
# ===================================================================
Sys.setlocale("LC_TIME", "English")
setwd("C:/Courses/ExData/Assignment 1/ExData_Plotting1")
# Read in the data, and mark ?-symbols as NA
df <- read.csv("../household_power_consumption.txt", sep=";", na.strings = c("?"), stringsAsFactors = FALSE)
# print table to show NA's - and keep only complete cases (no na's)
print(as.data.frame(sapply(df, function(y) sum(length(which(is.na(y)))))))
df <- df[complete.cases(df),]
# Convert date and time into one object, named timestamp
str(df)
df$Timestamp <- as.POSIXct(paste(df$Date, df$Time), format="%d/%m/%Y %H:%M:%S")
# Add the weekdays
df$Day <- weekdays(as.Date(df$Date), abbreviate = TRUE)
# Subset the
df <- df[df$Day %in% c("Thu", "Fri", "Sat"), ]
View(df)
df <- df[df$Timestamp >= "2007-02-01" & df$Timestamp < "2007-02-03" &
df$Day %in% c("Thu", "Fri", "Sat"), ]
View(df)
# ===================================================================
#                      Exploratory Data Analysis
#                            Assignment #1
# ===================================================================
Sys.setlocale("LC_TIME", "English")
setwd("C:/Courses/ExData/Assignment 1/ExData_Plotting1")
# Read in the data, and mark ?-symbols as NA
df <- read.csv("../household_power_consumption.txt", sep=";", na.strings = c("?"), stringsAsFactors = FALSE)
# print table to show NA's - and keep only complete cases (no na's)
print(as.data.frame(sapply(df, function(y) sum(length(which(is.na(y)))))))
df <- df[complete.cases(df),]
# Convert date and time into one object, named timestamp
str(df)
df$Timestamp <- as.POSIXct(paste(df$Date, df$Time), format="%d/%m/%Y %H:%M:%S")
# Add the weekdays
df$Day <- weekdays(as.Date(df$Date), abbreviate = TRUE)
df <- df[df$Timestamp >= "2007-02-01" & df$Timestamp < "2007-02-03",]
View(df)
df$Day <- weekdays(as.Date(df$Timestamp), abbreviate = TRUE)
View(df)
df <- df[df$Timestamp >= "2007-02-01" & df$Timestamp < "2007-02-03" &
df$Day %in% c("Thu", "Fri", "Sat"), ]
View(df)
with(df, plot(Global_active_power, day,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency"
))
with(df, plot(Global_active_power, Day,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency"
))
View(df)
with(df, plot(Global_active_power, Day)
with(df, plot(Global_active_power, Day))
with(df, plot(Global_active_power, Timestamp))
with(df, plot(Timestamp, Global_active_power))
with(df, plot(Timestamp, Global_active_power),
type="o")
with(df, plot(Timestamp, Global_active_power),
type="o")
with(df, plot(Timestamp, Global_active_power),
type="l")
with(df, plot(Timestamp, Global_active_power, type="l")
with(df, plot(Timestamp, Global_active_power, type="l"))
plot(df$Timestamp, df$Global_active_power, type="l")
plot(df$Timestamp, df$Global_active_power,
type="l",
ylab = "Global Active Power (kilowatts)"
)
plot(df$Timestamp, df$Global_active_power,
type="l",
ylab = "Global Active Power (kilowatts)",
xlab = ""
)
png(filename = "plot2.png",width = 480, height = 480)
plot(df$Timestamp, df$Global_active_power,
type="l",
ylab = "Global Active Power (kilowatts)",
xlab = ""
)
dev.off()
# ===================================================================
#                      Exploratory Data Analysis
#                            Assignment #1
# ===================================================================
Sys.setlocale("LC_TIME", "English")
setwd("C:/Courses/ExData/Assignment 1/ExData_Plotting1")
# Read in the data, and mark ?-symbols as NA
df <- read.csv("../household_power_consumption.txt", sep=";", na.strings = c("?"), stringsAsFactors = FALSE)
# print table to show NA's - and keep only complete cases (no na's)
print(as.data.frame(sapply(df, function(y) sum(length(which(is.na(y)))))))
df <- df[complete.cases(df),]
# Convert date and time into one object, named timestamp
str(df)
df$Timestamp <- as.POSIXct(paste(df$Date, df$Time), format="%d/%m/%Y %H:%M:%S")
# Add the weekdays
df$Day <- weekdays(as.Date(df$Timestamp), abbreviate = TRUE)
# Subset the ata.frame
df <- df[df$Timestamp >= "2007-02-01" & df$Timestamp < "2007-02-03" &
df$Day %in% c("Thu", "Fri", "Sat"), ]
# Make the historgram plot
#png(filename = "plot3.png",width = 480, height = 480)
plot(df$Timestamp, df$Global_active_power,
type="l",
ylab = "Global Active Power (kilowatts)",
xlab = ""
)
#dev.off()
plot(df$Timestamp, df$Sub_metering_1,
type="l",
ylab = "Global Active Power (kilowatts)",
xlab = ""
)
plot(df$Timestamp, df$Sub_metering_2, type="l", col="red")
plot(df$Timestamp, df$Sub_metering_1,
type="l",
ylab = "Global Active Power (kilowatts)",
xlab = ""
)
plot(df$Timestamp, df$Sub_metering_2, type="l", col="red")
plot(df$Timestamp, df$Sub_metering_1, type="l")
plot(df$Timestamp, df$Sub_metering_2, type="l", col="red")
plot(df$Timestamp, df$Sub_metering_1, type="l")
par(new=TRUE)
plot(df$Timestamp, df$Sub_metering_2, type="l", col="red")
plot(df$Timestamp, df$Sub_metering_1, type="l")
par(new=FALSE)
plot(df$Timestamp, df$Sub_metering_2, type="l", col="red")
plot(df$Timestamp, df$Sub_metering_1, type="l")
plot(df$Timestamp, df$Sub_metering_1, type="n")
plot(df$Timestamp, df$Sub_metering_2, type="l", col="red")
plot(df$Timestamp, df$Sub_metering_1, type="n")
par(new=FALSE)
plot(df$Timestamp, df$Sub_metering_2, type="l", col="red")
plot(df$Timestamp, df$Sub_metering_1, type="n")
par(new=TRUE)
plot(df$Timestamp, df$Sub_metering_2, type="l", col="red")
plot(df$Timestamp, df$Sub_metering_1, type="l", xlim=c(0.0,40.0))
plot(df$Timestamp, df$Sub_metering_1, type="l", ylim=c(0.0,40.0))
par(new=TRUE)
plot(df$Timestamp, df$Sub_metering_2, type="l", ylim=c(0.0,40.0), col="red")
par(new=TRUE)
plot(df$Timestamp, df$Sub_metering_3, type="l", ylim=c(0.0,40.0), col="blue")
